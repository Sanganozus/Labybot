<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>HWPRobot: uart.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">HWPRobot
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('uart_8h_source.html',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">uart.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="uart_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @file uart.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * @ingroup io</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * UART library: controls UART 0,1,2,3 via interrupts and FIFO buffers.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * All functions are interrupt safe concerning UDRE and RX complete interrupt.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#ifndef UART_H_</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#define UART_H_</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// include UART configuration</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="uart__cfg_8h.html">cfg/io/uart/uart_cfg.h</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;stdbool.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * Initialize the UART library. Must be called before any other library function.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * Global interrupts must be enabled manually after calling this function.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> * See also the corresponding configuration file: src/cfg/io/uart/uart_cfg.h</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.html#a0c0ca72359ddf28dcd15900dfba19343">uart_init</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> * Read a single byte from the FIFO RX buffer of the corresponding UART. Blocks as</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> * long as there are no bytes in the buffer. Check &lt;code&gt;uart_availableX()&lt;/code&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * if you want to make sure &lt;code&gt;uart_readX()&lt;/code&gt; won&#39;t block.</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> * Due to blocking, this function must not be called from interrupt context.</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * @return  the retrieved byte</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="uart_8h.html#adef0c98bd51ce9a560f138349d3eb655">   38</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#adef0c98bd51ce9a560f138349d3eb655">uart_read0</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> * @copydoc uart_read0()</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="uart_8h.html#a61d4093363486094ae4068cbd4363f66">   43</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#a61d4093363486094ae4068cbd4363f66">uart_read1</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * @copydoc uart_read0()</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="uart_8h.html#a0d81b695c602c30d6ffa9d0ff968130e">   48</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#a0d81b695c602c30d6ffa9d0ff968130e">uart_read2</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> * @copydoc uart_read0()</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="uart_8h.html#a6a35103ddce6d3de53e41dc791b39931">   53</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#a6a35103ddce6d3de53e41dc791b39931">uart_read3</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * Write a single byte to the FIFO TX buffer of the corresponding UART. Blocks as</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * long as there is no space in the buffer. Check</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * &lt;code&gt;uart_TXBufSpaceAvailableX()&lt;/code&gt; if you want to make sure</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> * &lt;code&gt;uart_writeX()&lt;/code&gt; won&#39;t block.</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> * Due to blocking, this function must not be called from interrupt context.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * Note: Blocking can be disabled by compiling with the symbol</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> *       UART_NONBLOCKING_TRANSMIT defined. If the buffer is full in this case,</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> *       the byte to be transmitted is discarded.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * @param   data   the byte to be placed into the TX buffer</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="uart_8h.html#a607ec44032a01503bb7cdc0ce1f46dd3">   70</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.html#a607ec44032a01503bb7cdc0ce1f46dd3">uart_write0</a>(<span class="keyword">const</span> uint8_t data);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * @copydoc uart_write0()</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="uart_8h.html#a174534ee2e5dcb4d0a522ea27338c138">   75</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.html#a174534ee2e5dcb4d0a522ea27338c138">uart_write1</a>(<span class="keyword">const</span> uint8_t data);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * @copydoc uart_write0()</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="uart_8h.html#ad29486d5d924df23162551fb97ad24c1">   80</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.html#ad29486d5d924df23162551fb97ad24c1">uart_write2</a>(<span class="keyword">const</span> uint8_t data);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> * @copydoc uart_write0()</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="uart_8h.html#a3d88cb0efa95a693510abbd9c249e649">   85</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.html#a3d88cb0efa95a693510abbd9c249e649">uart_write3</a>(<span class="keyword">const</span> uint8_t data);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"> * Check if a single byte can be read from the receive FIFO buffer via</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"> * &lt;code&gt;uart_readX()&lt;/code&gt; without blocking.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"> * @return  true if a single byte can be read without blocking, otherwise false</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="uart_8h.html#aae762b4583a46d34eb4e534531d30b87">   94</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#aae762b4583a46d34eb4e534531d30b87">uart_available0</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> * @copydoc uart_available0()</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="uart_8h.html#a68bad26d85f6cc5849f760cf35664146">   99</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a68bad26d85f6cc5849f760cf35664146">uart_available1</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"> * @copydoc uart_available0()</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="uart_8h.html#ab5fa61b215cc7643ebbe5d843b5ee080">  104</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#ab5fa61b215cc7643ebbe5d843b5ee080">uart_available2</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> * @copydoc uart_available0()</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="uart_8h.html#ac77ab3689025e0e839e0b37b568e6e8b">  109</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#ac77ab3689025e0e839e0b37b568e6e8b">uart_available3</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"> * Wait until at least one byte is in RX buffer or until a timeout occurs.</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"> * Due to blocking, this function must not be called from interrupt context.</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> * @param   timeout   timeout in milliseconds</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> * @return  true  if at least one byte is available in RX buffer,</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"> *          false if timeout occurred</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="uart_8h.html#a3950ab0dd438a47b0f606ffbc202f8bc">  121</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a3950ab0dd438a47b0f606ffbc202f8bc">uart_waitRXAvailable0</a>(<span class="keyword">const</span> uint8_t timeout);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"> * @copydoc uart_waitRXAvailable0()</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="uart_8h.html#ae81dd23875a152dcfe4ca556192137fd">  126</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#ae81dd23875a152dcfe4ca556192137fd">uart_waitRXAvailable1</a>(<span class="keyword">const</span> uint8_t timeout);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"> * @copydoc uart_waitRXAvailable0()</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="uart_8h.html#a2e3364a8ba62f9f356baad7ce1f840dc">  131</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a2e3364a8ba62f9f356baad7ce1f840dc">uart_waitRXAvailable2</a>(<span class="keyword">const</span> uint8_t timeout);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"> * @copydoc uart_waitRXAvailable0()</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="uart_8h.html#aed52c6771b926eddd8e74236f1fb3516">  136</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#aed52c6771b926eddd8e74236f1fb3516">uart_waitRXAvailable3</a>(<span class="keyword">const</span> uint8_t timeout);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"> * Check if a single byte can be written to the FIFO TX buffer via</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"> * &lt;code&gt;uart_writeX()&lt;/code&gt; without blocking.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"> * @return  true if a single byte can be written without blocking, otherwise false</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="uart_8h.html#a44639659f0c9722d0b36b46180f0174c">  145</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a44639659f0c9722d0b36b46180f0174c">uart_TXBufSpaceAvailable0</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"> * @copydoc uart_TXBufSpaceAvailable0()</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="uart_8h.html#a4201db91e16beb0e4e0908767ff6d025">  150</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a4201db91e16beb0e4e0908767ff6d025">uart_TXBufSpaceAvailable1</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"> * @copydoc uart_TXBufSpaceAvailable0()</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="uart_8h.html#a2a82f1aeb4ca66de7e2ef72c5904b096">  155</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a2a82f1aeb4ca66de7e2ef72c5904b096">uart_TXBufSpaceAvailable2</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"> * @copydoc uart_TXBufSpaceAvailable0()</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="uart_8h.html#a281bdcbd1b8056dd608eba03585f7a65">  160</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a281bdcbd1b8056dd608eba03585f7a65">uart_TXBufSpaceAvailable3</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"> * Determine the number of bytes which can be written to the FIFO TX buffer via</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"> * &lt;code&gt;uart_write()&lt;/code&gt; without blocking.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"> * @return  number of bytes available in FIFO TX buffer</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="uart_8h.html#a37ff23b7942dd73cfb1eba2cd02de7b5">  169</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#a37ff23b7942dd73cfb1eba2cd02de7b5">uart_getTXBufSpace0</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> * @copydoc uart_getTXBufSpace0()</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="uart_8h.html#ad2f090e0ed4ae01f5b9f254ce870f101">  174</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#ad2f090e0ed4ae01f5b9f254ce870f101">uart_getTXBufSpace1</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"> * @copydoc uart_getTXBufSpace0()</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="uart_8h.html#a72e131467feee2fbf60feddc073300b1">  179</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#a72e131467feee2fbf60feddc073300b1">uart_getTXBufSpace2</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"> * @copydoc uart_getTXBufSpace0()</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="uart_8h.html#aceb1a1f4a130570e991f949ada70208b">  184</a></span>&#160;uint8_t <a class="code" href="uart_8h.html#aceb1a1f4a130570e991f949ada70208b">uart_getTXBufSpace3</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * Determine if an overflow of the UART RX buffer has occurred during the RX</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * complete ISR and clear the error flag.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * When this happens, additional data read from the UART is discarded and a</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> * packet can not be fully received.</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"> * @return  true if overflow occurred, false otherwise</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="uart_8h.html#ab77b33ebf95092243756ff98d18d4db3">  196</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#ab77b33ebf95092243756ff98d18d4db3">uart_isRXBufOverflow0</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"> * @copydoc uart_isRXBufOverflow0()</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="uart_8h.html#a0cf3bb4e34f8bf522af002a1daa6c190">  201</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#a0cf3bb4e34f8bf522af002a1daa6c190">uart_isRXBufOverflow1</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> * @copydoc uart_isRXBufOverflow0()</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="uart_8h.html#aa76f44fb7b77c54424bbbb0f3e070ea0">  206</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#aa76f44fb7b77c54424bbbb0f3e070ea0">uart_isRXBufOverflow2</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> * @copydoc uart_isRXBufOverflow0()</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="uart_8h.html#acf467075cc07d156cb5971b63c131264">  211</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="uart_8h.html#acf467075cc07d156cb5971b63c131264">uart_isRXBufOverflow3</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* UART_H_ */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="auart_8h_html_a68bad26d85f6cc5849f760cf35664146"><div class="ttname"><a href="uart_8h.html#a68bad26d85f6cc5849f760cf35664146">uart_available1</a></div><div class="ttdeci">bool uart_available1(void)</div><div class="ttdoc">Check if a single byte can be read from the receive FIFO buffer via uart_readX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_a0c0ca72359ddf28dcd15900dfba19343"><div class="ttname"><a href="uart_8h.html#a0c0ca72359ddf28dcd15900dfba19343">uart_init</a></div><div class="ttdeci">void uart_init(void)</div><div class="ttdoc">Initialize the UART library.</div><div class="ttdef"><b>Definition:</b> <a href="uart_8c_source.html#l00284">uart.c:284</a></div></div>
<div class="ttc" id="auart_8h_html_aa76f44fb7b77c54424bbbb0f3e070ea0"><div class="ttname"><a href="uart_8h.html#aa76f44fb7b77c54424bbbb0f3e070ea0">uart_isRXBufOverflow2</a></div><div class="ttdeci">bool uart_isRXBufOverflow2(void)</div><div class="ttdoc">Determine if an overflow of the UART RX buffer has occurred during the RX complete ISR and clear the ...</div></div>
<div class="ttc" id="auart_8h_html_a37ff23b7942dd73cfb1eba2cd02de7b5"><div class="ttname"><a href="uart_8h.html#a37ff23b7942dd73cfb1eba2cd02de7b5">uart_getTXBufSpace0</a></div><div class="ttdeci">uint8_t uart_getTXBufSpace0(void)</div><div class="ttdoc">Determine the number of bytes which can be written to the FIFO TX buffer via uart_write() without blo...</div></div>
<div class="ttc" id="auart_8h_html_ad29486d5d924df23162551fb97ad24c1"><div class="ttname"><a href="uart_8h.html#ad29486d5d924df23162551fb97ad24c1">uart_write2</a></div><div class="ttdeci">void uart_write2(const uint8_t data)</div><div class="ttdoc">Write a single byte to the FIFO TX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_a44639659f0c9722d0b36b46180f0174c"><div class="ttname"><a href="uart_8h.html#a44639659f0c9722d0b36b46180f0174c">uart_TXBufSpaceAvailable0</a></div><div class="ttdeci">bool uart_TXBufSpaceAvailable0(void)</div><div class="ttdoc">Check if a single byte can be written to the FIFO TX buffer via uart_writeX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_a0d81b695c602c30d6ffa9d0ff968130e"><div class="ttname"><a href="uart_8h.html#a0d81b695c602c30d6ffa9d0ff968130e">uart_read2</a></div><div class="ttdeci">uint8_t uart_read2(void)</div><div class="ttdoc">Read a single byte from the FIFO RX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_acf467075cc07d156cb5971b63c131264"><div class="ttname"><a href="uart_8h.html#acf467075cc07d156cb5971b63c131264">uart_isRXBufOverflow3</a></div><div class="ttdeci">bool uart_isRXBufOverflow3(void)</div><div class="ttdoc">Determine if an overflow of the UART RX buffer has occurred during the RX complete ISR and clear the ...</div></div>
<div class="ttc" id="auart_8h_html_a281bdcbd1b8056dd608eba03585f7a65"><div class="ttname"><a href="uart_8h.html#a281bdcbd1b8056dd608eba03585f7a65">uart_TXBufSpaceAvailable3</a></div><div class="ttdeci">bool uart_TXBufSpaceAvailable3(void)</div><div class="ttdoc">Check if a single byte can be written to the FIFO TX buffer via uart_writeX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_ad2f090e0ed4ae01f5b9f254ce870f101"><div class="ttname"><a href="uart_8h.html#ad2f090e0ed4ae01f5b9f254ce870f101">uart_getTXBufSpace1</a></div><div class="ttdeci">uint8_t uart_getTXBufSpace1(void)</div><div class="ttdoc">Determine the number of bytes which can be written to the FIFO TX buffer via uart_write() without blo...</div></div>
<div class="ttc" id="auart_8h_html_aceb1a1f4a130570e991f949ada70208b"><div class="ttname"><a href="uart_8h.html#aceb1a1f4a130570e991f949ada70208b">uart_getTXBufSpace3</a></div><div class="ttdeci">uint8_t uart_getTXBufSpace3(void)</div><div class="ttdoc">Determine the number of bytes which can be written to the FIFO TX buffer via uart_write() without blo...</div></div>
<div class="ttc" id="auart_8h_html_a2e3364a8ba62f9f356baad7ce1f840dc"><div class="ttname"><a href="uart_8h.html#a2e3364a8ba62f9f356baad7ce1f840dc">uart_waitRXAvailable2</a></div><div class="ttdeci">bool uart_waitRXAvailable2(const uint8_t timeout)</div><div class="ttdoc">Wait until at least one byte is in RX buffer or until a timeout occurs.</div></div>
<div class="ttc" id="auart_8h_html_a174534ee2e5dcb4d0a522ea27338c138"><div class="ttname"><a href="uart_8h.html#a174534ee2e5dcb4d0a522ea27338c138">uart_write1</a></div><div class="ttdeci">void uart_write1(const uint8_t data)</div><div class="ttdoc">Write a single byte to the FIFO TX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_adef0c98bd51ce9a560f138349d3eb655"><div class="ttname"><a href="uart_8h.html#adef0c98bd51ce9a560f138349d3eb655">uart_read0</a></div><div class="ttdeci">uint8_t uart_read0(void)</div><div class="ttdoc">Read a single byte from the FIFO RX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_a3d88cb0efa95a693510abbd9c249e649"><div class="ttname"><a href="uart_8h.html#a3d88cb0efa95a693510abbd9c249e649">uart_write3</a></div><div class="ttdeci">void uart_write3(const uint8_t data)</div><div class="ttdoc">Write a single byte to the FIFO TX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_ae81dd23875a152dcfe4ca556192137fd"><div class="ttname"><a href="uart_8h.html#ae81dd23875a152dcfe4ca556192137fd">uart_waitRXAvailable1</a></div><div class="ttdeci">bool uart_waitRXAvailable1(const uint8_t timeout)</div><div class="ttdoc">Wait until at least one byte is in RX buffer or until a timeout occurs.</div></div>
<div class="ttc" id="auart_8h_html_a61d4093363486094ae4068cbd4363f66"><div class="ttname"><a href="uart_8h.html#a61d4093363486094ae4068cbd4363f66">uart_read1</a></div><div class="ttdeci">uint8_t uart_read1(void)</div><div class="ttdoc">Read a single byte from the FIFO RX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_a2a82f1aeb4ca66de7e2ef72c5904b096"><div class="ttname"><a href="uart_8h.html#a2a82f1aeb4ca66de7e2ef72c5904b096">uart_TXBufSpaceAvailable2</a></div><div class="ttdeci">bool uart_TXBufSpaceAvailable2(void)</div><div class="ttdoc">Check if a single byte can be written to the FIFO TX buffer via uart_writeX() without blocking.</div></div>
<div class="ttc" id="auart__cfg_8h_html"><div class="ttname"><a href="uart__cfg_8h.html">uart_cfg.h</a></div><div class="ttdoc">User configuration for UART and communication library.</div></div>
<div class="ttc" id="auart_8h_html_a4201db91e16beb0e4e0908767ff6d025"><div class="ttname"><a href="uart_8h.html#a4201db91e16beb0e4e0908767ff6d025">uart_TXBufSpaceAvailable1</a></div><div class="ttdeci">bool uart_TXBufSpaceAvailable1(void)</div><div class="ttdoc">Check if a single byte can be written to the FIFO TX buffer via uart_writeX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_aae762b4583a46d34eb4e534531d30b87"><div class="ttname"><a href="uart_8h.html#aae762b4583a46d34eb4e534531d30b87">uart_available0</a></div><div class="ttdeci">bool uart_available0(void)</div><div class="ttdoc">Check if a single byte can be read from the receive FIFO buffer via uart_readX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_a0cf3bb4e34f8bf522af002a1daa6c190"><div class="ttname"><a href="uart_8h.html#a0cf3bb4e34f8bf522af002a1daa6c190">uart_isRXBufOverflow1</a></div><div class="ttdeci">bool uart_isRXBufOverflow1(void)</div><div class="ttdoc">Determine if an overflow of the UART RX buffer has occurred during the RX complete ISR and clear the ...</div></div>
<div class="ttc" id="auart_8h_html_a72e131467feee2fbf60feddc073300b1"><div class="ttname"><a href="uart_8h.html#a72e131467feee2fbf60feddc073300b1">uart_getTXBufSpace2</a></div><div class="ttdeci">uint8_t uart_getTXBufSpace2(void)</div><div class="ttdoc">Determine the number of bytes which can be written to the FIFO TX buffer via uart_write() without blo...</div></div>
<div class="ttc" id="auart_8h_html_aed52c6771b926eddd8e74236f1fb3516"><div class="ttname"><a href="uart_8h.html#aed52c6771b926eddd8e74236f1fb3516">uart_waitRXAvailable3</a></div><div class="ttdeci">bool uart_waitRXAvailable3(const uint8_t timeout)</div><div class="ttdoc">Wait until at least one byte is in RX buffer or until a timeout occurs.</div></div>
<div class="ttc" id="auart_8h_html_ab5fa61b215cc7643ebbe5d843b5ee080"><div class="ttname"><a href="uart_8h.html#ab5fa61b215cc7643ebbe5d843b5ee080">uart_available2</a></div><div class="ttdeci">bool uart_available2(void)</div><div class="ttdoc">Check if a single byte can be read from the receive FIFO buffer via uart_readX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_ac77ab3689025e0e839e0b37b568e6e8b"><div class="ttname"><a href="uart_8h.html#ac77ab3689025e0e839e0b37b568e6e8b">uart_available3</a></div><div class="ttdeci">bool uart_available3(void)</div><div class="ttdoc">Check if a single byte can be read from the receive FIFO buffer via uart_readX() without blocking.</div></div>
<div class="ttc" id="auart_8h_html_a3950ab0dd438a47b0f606ffbc202f8bc"><div class="ttname"><a href="uart_8h.html#a3950ab0dd438a47b0f606ffbc202f8bc">uart_waitRXAvailable0</a></div><div class="ttdeci">bool uart_waitRXAvailable0(const uint8_t timeout)</div><div class="ttdoc">Wait until at least one byte is in RX buffer or until a timeout occurs.</div></div>
<div class="ttc" id="auart_8h_html_a607ec44032a01503bb7cdc0ce1f46dd3"><div class="ttname"><a href="uart_8h.html#a607ec44032a01503bb7cdc0ce1f46dd3">uart_write0</a></div><div class="ttdeci">void uart_write0(const uint8_t data)</div><div class="ttdoc">Write a single byte to the FIFO TX buffer of the corresponding UART.</div></div>
<div class="ttc" id="auart_8h_html_ab77b33ebf95092243756ff98d18d4db3"><div class="ttname"><a href="uart_8h.html#ab77b33ebf95092243756ff98d18d4db3">uart_isRXBufOverflow0</a></div><div class="ttdeci">bool uart_isRXBufOverflow0(void)</div><div class="ttdoc">Determine if an overflow of the UART RX buffer has occurred during the RX complete ISR and clear the ...</div></div>
<div class="ttc" id="auart_8h_html_a6a35103ddce6d3de53e41dc791b39931"><div class="ttname"><a href="uart_8h.html#a6a35103ddce6d3de53e41dc791b39931">uart_read3</a></div><div class="ttdeci">uint8_t uart_read3(void)</div><div class="ttdoc">Read a single byte from the FIFO RX buffer of the corresponding UART.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_97aefd0d527b934f1d99a682da8fe6a9.html">lib</a></li><li class="navelem"><a class="el" href="dir_5d0aa56803c8250a5d891761f6bfc5c7.html">io</a></li><li class="navelem"><a class="el" href="dir_ffe32ea58ceba9a965f60626da9b0d3b.html">uart</a></li><li class="navelem"><a class="el" href="uart_8h.html">uart.h</a></li>
    <li class="footer">Generated by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
